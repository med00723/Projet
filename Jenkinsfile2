
pipeline {

  environment {
    dockerimagename = ""
    dockerImage = ""
    backendImageName = "med00723/backend"
    DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
    backendImageTag = "${BUILD_NUMBER}"
   
  }

  agent any

  stages {

    stage('Checkout Source') {
      steps {
        git 'https://github.com/med00723/Projet.git'
      }
    }

    stage('Build'){
        steps {
            dir('msign/backend'){
                sh 'npm install'
              }
        }
    }
    stage('Test'){
        steps {
            dir('msign/backend'){
                sh 'npm test'
                
              }
        }
    }
    stage('sonarqube analysis codes'){
        steps {
            dir('msign/backend'){
                sh 'npm run sonar'
              }
        }
    }


    stage('Build image') {
      steps{
        script {
          dir('msign/backend'){
            sh "docker build -t ${backendImageName}:${backendImageTag} ."
            
          }
          
        }
      }
    }


     stage('login to dockerhub') {
            steps{
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('push image to dockerhub') {
            steps{
                sh "docker push ${backendImageName}:${backendImageTag}"
            }
        }
  
    stage('Docker Remove Backend Image') {
      steps {
        sh "docker rmi ${backendImageName}:${backendImageTag}"
      }
    }
    
    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "mongo_db.yaml", kubeconfigId: "k8scluster")
          sh "sed -i 's|__IMAGE_NAME__|${backendImageName}|g; s|__IMAGE_TAG__|${backendImageTag}|g' deployment_back.yaml"
          kubernetesDeploy(configs: "deployment_back.yaml", kubeconfigId: "k8scluster")
        }
      }
    }
    


  }
  post {
    always {
      script {
        def pipelineStatus = currentBuild.result
        def emailBody = pipelineStatus == 'SUCCESS' ? "La pipeline CI/CD a été exécutée avec succès." : "La pipeline CI/CD a été exécutée en échec."
        emailext subject: "Rapport d'exécution de la pipeline CI/CD",
                  body: emailBody,
                  to: "medhajalouane@gmail.com",
                  attachLog: true
      }
    }
  }

}




